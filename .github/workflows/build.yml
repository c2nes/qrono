name: build

on:
  push:
    branches:
      - '*'
    tags:
      - '[0-9]+.*'
jobs:
  check:
    runs-on: ubuntu-latest
    container:
      image: rust:1
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache Rust dependencies
        uses: actions/cache@v2
        with:
          path: 'qrono-rs/target/'
          key: rs-${{ hashFiles('**/Cargo.*') }}-check
          restore-keys: |
              rs-${{ hashFiles('**/Cargo.*') }}-
              rs-
      - name: Install protoc
        run: apt-get update && apt-get install -y protobuf-compiler
      - name: Check
        run: cargo check --workspace
  test:
    runs-on: ubuntu-latest
    needs: check
    container:
      image: rust:1
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache Rust dependencies
        uses: actions/cache@v2
        with:
          path: 'qrono-rs/target/'
          key: rs-${{ hashFiles('**/Cargo.*') }}-test
          restore-keys: |
              rs-${{ hashFiles('**/Cargo.*') }}-
              rs-
      - name: Install protoc
        run: apt-get update && apt-get install -y protobuf-compiler
      - name: Run tests
        run: cargo test --workspace
  build-docker-image:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Compute build parameters
        run: |
            build/set-release-params.sh >> $GITHUB_ENV
      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ env['docker_push'] }}
          tags: ${{ env['docker_tags'] }}
