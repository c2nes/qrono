name: build

on:
  push:
    branches:
      - '*'
    tags:
      - '[0-9]+.*'
jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: maven:3.6-adoptopenjdk-11
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: /root/.m2/repository
          key: m2-${{ hashFiles('**/pom.xml') }}-test
          restore-keys: |
              m2-${{ hashFiles('**/pom.xml') }}-
              m2-
      - name: Run tests
        run: mvn -B test
  build-server:
    runs-on: ubuntu-latest
    container:
      image: maven:3.6-adoptopenjdk-11
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: /root/.m2/repository
          key: m2-${{ hashFiles('**/pom.xml') }}-package
          restore-keys: |
              m2-${{ hashFiles('**/pom.xml') }}-
              m2-
      - name: Build server
        run: mvn -B -DskipTests package
      - uses: actions/upload-artifact@v2
        with:
          name: server-jar
          path: target/qrono-server.jar
  build-gateway:
    runs-on: ubuntu-latest
    container:
      image: golang:1.15
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: /root/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}-build
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Build gateway
        run: go build .
        working-directory: gateway
      - uses: actions/upload-artifact@v2
        with:
          name: gateway-binary
          path: gateway/gateway
  build-docker-image:
    runs-on: ubuntu-latest
    needs:
      - test
      - build-server
      - build-gateway
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download server artifacts
        uses: actions/download-artifact@v2
        with:
          name: server-jar
          path: target/
      - name: Download gateway artifacts
        uses: actions/download-artifact@v2
        with:
          name: gateway-binary
          path: gateway/
      - name: Restore gateway binary permissions
        run: |
            chmod 0755 gateway/gateway
      - name: Compute build parameters
        run: |
            build/set-release-params.sh >> $GITHUB_ENV
      - name: Build
        uses: docker/build-push-action@v2
        with:
          context: .
          push: ${{ env['docker_push'] }}
          tags: ${{ env['docker_tags'] }}
