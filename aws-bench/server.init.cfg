fqdn: server.qrono.test

disk_setup:
  /dev/sdf:
    table_type: mbr
    layout: True

fs_setup:
  - label: qrono_data
    filesystem: ext4
    device: /dev/sdf
    partition: auto

mounts:
  # I would have prefered to specify 'LABEL=qrono_data', but "sdf" and "sdf.1"
  # are the only things I have found that work.
  - ["sdf", "/var/lib/qrono"]

yum_repos:
  AdoptOpenJDK:
    baseurl: "http://adoptopenjdk.jfrog.io/adoptopenjdk/rpm/amazonlinux/$releasever/$basearch"
    enabled: true
    gpgcheck: true
    gpgkey: "https://adoptopenjdk.jfrog.io/adoptopenjdk/api/gpg/key/public"

package_update: true
packages:
- git
- tmux
- jq
- adoptopenjdk-16-hotspot

write_files:
# The write-files module is configured to run before the users-groups modules so
# we place these files in /etc/skel instead of putting them directly into
# /home/ec2-user.
- path: /etc/skel/.tmux.conf
  content: "${filebase64("${root}/tmux.conf")}"
  owner: root:root
  permissions: '0644'
  encoding: b64

# bash profile
- path: /etc/skel/.bash_profile
  content: "${filebase64("${root}/bash_profile")}"
  owner: root:root
  permissions: '0644'
  encoding: b64

# Go version manager (https://github.com/c2nes/gv)
- path: /etc/skel/bin/gv
  content: "${filebase64("${root}/gv")}"
  owner: root:root
  permissions: '0755'
  encoding: b64

# ec2-user init script
- path: /etc/skel/bin/user.init.sh
  content: "${filebase64("${root}/server-user.init.sh")}"
  owner: root:root
  permissions: '0755'
  encoding: b64

# Script to Run Qrono in Docker
- path: /etc/skel/bin/docker-run
  content: "${filebase64("${root}/docker-run")}"
  owner: root:root
  permissions: '0755'
  encoding: b64

# There is no obvious way to create a directory by itself so we create an empty
# file in the bin directory to ensure the bin/ directory exists.
- path: /etc/skel/bin/.keepdir
  owner: root:root
